Основы Go: цикл for
Цикл For
В Go есть только одна циклическая конструкция - цикл for.
/*
Базовй цикл for имеет три компонента разделенные точкой с запятой:

блок инициализации: выполняется перед первой итерацией
условный блок: выполняется перед каждой итерацией
завершающий блок: выполняется в конце каждой итерации
Блок инициализации, как правило, содержит краткое объявление переменных; переменные объявленные здесь доступны только в области видимости цикла for.

Цикл прекратит итерации, как только значение логического выражения в условном блоке будет false.

Замечание: В отличие от таких языков как C, Java или JavaScript блоки конструкции for не заключены в круглые скобки, а фигурные скобки { } всегда обязательны.
*/

package main

import "fmt"

func main() {
  sum := 0
  for i := 0; i < 10; i++ {
    sum += i
  }
  fmt.Println(sum)
}
/*
Вывод:


45
Блоки инициализации и завершения опциональны.
*/

package main

import "fmt"

func main() {
  sum := 1
  for ; sum < 1000; {
    sum += sum
  }
  fmt.Println(sum)
}
/*
Вывод:


1024
For это "while" в Go
Вы можете опустить точки с запятой: в Go for это как while в C.
*/

package main

import "fmt"

func main() {
  sum := 1
  for sum < 1000 {
    sum += sum
  }
  fmt.Println(sum)
} /*
Вывод:


1024
Если вы опустите условный блок, то получится компактная запись бесконечного цикла.
*/

package main

func main() {
  for {
  }
}
